name: CI & CD
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - "main"

jobs:
  lint-and-type-check:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'wip:') }}
    permissions:
      checks: write
      pull-requests: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Nodejs environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
      - name: Install Dependencies
        run: yarn
      - name: Lint App
        run: yarn lint --output-file eslint_report.json --format json
        continue-on-error: true
      - name: Type Check App
        run: yarn tsc > typescript.log
        continue-on-error: true
      - uses: DerLev/eslint-annotations@v1
        with:
          eslint-report: eslint_report.json
          typescript-log: typescript.log
          error-on-warn: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          status-check-name: Annotations
  deploy-to-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    if: github.event_name == 'push'
    environment:
      name: Production
      url: ${{ steps.vercel_deploy.outputs.DEPLOY_URL }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Nodejs environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
      - name: Install Vercel CLI
        run: yarn global add vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: vercel_deploy
        run: >-
          echo "DEPLOY_URL=$(
            vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          )" >> $GITHUB_OUTPUT
      - name: Add Job Summary
        run: |
          echo "### Build is live in production :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This build got deployed on the following URLs:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ${{ steps.vercel_deploy.outputs.DEPLOY_URL }}" >> $GITHUB_STEP_SUMMARY
          echo "- https://nextjs-client-ffmpeg-derlev.vercel.app *(latest preview url)*" >> $GITHUB_STEP_SUMMARY
          echo "- https://nextjs-client-ffmpeg.vercel.app *(latest production url)*" >> $GITHUB_STEP_SUMMARY
